<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">
   
	<http>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		  <intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />
		  <intercept-url pattern="/dummy" access="hasRole('ROLE_USER')"/>
		<!-- access denied page -->
		<!-- <access-denied-handler error-page="/403" />  -->
		<form-login 
		    login-page="/login" 
		    default-target-url="/auth" 
		   authentication-failure-url="/login?error" 
		    username-parameter="username"
			password-parameter="password" 
		    login-processing-url="/j_spring_security_check"/>
		    
		    
		 <logout logout-success-url="/" logout-url="/logout"
			delete-cookies="JSESSIONID" />
		
		<csrf disabled="true" />	
		
	</http>
	
	<!-- Select users and user_roles from database -->

<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select username,password, true from user where username=?"
				authorities-by-username-query=
					"select username,role from user where username=?"/>
		</authentication-provider>
	</authentication-manager> 

</beans:beans>